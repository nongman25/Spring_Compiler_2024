def grammer_rule_build():
    grammar_rules = [
    "S -> CODE",
    "CODE -> VDECL CODE",
    "CODE -> FDECL CODE",
    "CODE -> ''",
    "VDECL -> vtype id semi",
    "VDECL -> vtype ASSIGN semi",
    "ASSIGN -> id assign RHS",
    "RHS -> EXPR",
    "RHS -> literal",
    "RHS -> character",
    "RHS -> boolstr",
    "EXPR -> TERM addsub EXPR",
    "EXPR -> TERM",
    "TERM -> FACTOR multdiv TERM",
    "TERM -> FACTOR",
    "FACTOR -> lparen EXPR rparen",
    "FACTOR -> id",
    "FACTOR -> num",
    "FDECL -> vtype id lparen ARG rparen lbrace BLOCK RETURN rbrace",
    "ARG -> vtype id MOREARGS",
    "ARG -> ''",
    "MOREARGS -> comma vtype id MOREARGS",
    "MOREARGS -> ''",
    "BLOCK -> STMT BLOCK",
    "BLOCK -> ''",
    "STMT -> VDECL",
    "STMT -> ASSIGN semi",
    "STMT -> if lparen COND rparen lbrace BLOCK rbrace ELSE",
    "STMT -> while lparen COND rparen lbrace BLOCK rbrace",
    "COND -> COND comp BACKCOND",
    "COND -> BACKCOND",
    "BACKCOND -> boolstr",
    "ELSE -> else lbrace BLOCK rbrace",
    "ELSE -> ''",
    "RETURN -> return RHS semi",
    ]
    return grammar_rules